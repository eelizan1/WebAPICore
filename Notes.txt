1. Create empty project with Core 2.2
2. Configure to use MVC in the ConfigureServices method in Startup.cs
	Then add to pipeline in Configure()
3. Create Models without relatinship properties 
4. Create Entity Relationships by adding relationship properties to Entities
	Use Navigational Properties
	One to Many
		One - Single Entity
		Many - Collection - > ICollection
	virtual - Creates a proxy class at runtime
	Lazy loading - allows to interact with the ones we need
5. Many To Many
	Create intermediary table
		BookAuthor table 
			BookdId
			Book book - to link the class to the id prop
			AuthorId
			Author author
	BookAuthor will be a collection in the Book and Author entities
6. Create Database Annotations (Restrictions)
	[Key] // primary key
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)] //id is generated by db not user
	[Required]
	[MaxLength(100, ErrorMessage = "First Name cannot be more than 100 characters")]
	[StringLength(10,MinimumLength =3, ErrorMessage ="ISBN must be between 3 and 10 characters")]

	 public DateTime? DatePublished { get; set; } // optional field with ?. Will be null if no value
7. Add nuget packages
	microsoft.AspnetCore.All
8. Add connection string 
	public static IConfiguration Configuration { get; set; } in Startup.cs
	// create connection string in JSON Format and will be used in appsettings.json
        var connectionString = Configuration["connectionStrings:bookDBConnectionString"];
	AppSettings.JSON
	"connectionStrings": {
    		"bookDbConnectionString":  "Server=(localdb)\\mssqllocaldb;Database=BookApiProject;Trusted_Connection=True;"
  	}
9. Tell EF what classes are to be used for the framework using DBContext in BookDbContext.cs
	DbContext - how our app communicates with the db

	public class BookDbContext : DbContext
	public BookDbContext(DbContextOptions<DbContext> options)
            : base(options)
        {

        }

	Inherits from DbContextIptions the brings options down to base level (BookDbContext)

	Create the Migrations - allow any changes done from code side to be migrated to db
		Database.Migrate(); 
10. Setup Many to Many relationships with OnModelCreating in BookDbContext.cs
	
   		
